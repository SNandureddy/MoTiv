//
//  SelectTicketVC.swift
//  MoTiv
//
//  Created by ios2 on 29/11/18.
//  Copyright © 2018 MoTiv. All rights reserved.
//

import UIKit

class SelectTicketVC: BaseVC {
    
    //MARK:- IBOutlets
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var buyTicketsButton: UIButton!
    
    //MARK: - Variables
    var ticketList : [TicketList]?
    var selectedIndex : Int?
    
    //MARLK: - Life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Do any additional setup after loading the view.
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        customUI()
        getTicketList()
    }
    
    //MARK:- Private func
    func customUI(){
        setTitle(title: kSelectTickets)
        self.buyTicketsButton.setBackgroundImage(self.buyTicketsButton.graidentImage, for: .normal)
        self.buyTicketsButton.set(radius: 14.0)
    }
    
    func setData() -> JSONDictionary {
        var dict = JSONDictionary()
//        dict[APIKeys.kEventID] = EventVM.shared.eventDetailArray?[selectedIndex ?? 0].eventID
        dict[APIKeys.kEventID] = 1
        return dict
    }

    
    //MARK:- IBAction
    @IBAction func buyTicketButtonAction(_ sender: Any) {
        let vc = self.storyboard?.instantiateViewController(withIdentifier: kTicketDetailsVC) as! TicketDetailsVC
        self.navigationController?.show(vc, sender: self)
    }
}

//MARK: UITableview Datasource
extension SelectTicketVC: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return ticketList?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: kSelectTicketCell) as! SelectTicketCell
        cell.ticketDescriptionLabel.text = ticketList?[indexPath.row].ticketDescription
        cell.ticketTitleLabel.text = ticketList?[indexPath.row].ticketTitle
        cell.ticketPriceLabel.text = "£\(ticketList?[indexPath.row].ticketAmount ?? 0)"
        cell.ticketCountBaseView.isHidden = true
        cell.addButton.addTarget(self, action: #selector(self.addButtonAction(sender:)), for: .touchUpInside)
        cell.increaseButton.addTarget(self, action: #selector(self.increaseAction(sender:)), for: .touchUpInside)
        cell.decreaseButton.addTarget(self, action: #selector(self.decreaseAction(sender:)), for: .touchUpInside)
        cell.increaseButton.tag = indexPath.row
        cell.decreaseButton.tag = indexPath.row

        return cell
    }
    
    @objc override func addButtonAction(sender: UIButton) {
        if let cell = sender.superview?.superview?.superview?.superview as? SelectTicketCell {
            ticketList?[sender.tag].ticketCount = 1
            cell.ticketCountButton.setTitle("\(ticketList?[sender.tag].ticketCount ?? 0)", for: .normal)
            cell.addButton.isHidden = true
            cell.ticketCountBaseView.isHidden = false
        }
    }
    
    @objc func increaseAction(sender: UIButton) {
        if let cell = sender.superview?.superview?.superview?.superview?.superview as? SelectTicketCell {
            ticketList?[sender.tag].ticketCount = ((ticketList?[sender.tag].ticketCount) ?? 0) + 1
            cell.ticketCountButton.setTitle("\(ticketList?[sender.tag].ticketCount ?? 0)", for: .normal)
        }
    }
    
    @objc func decreaseAction(sender: UIButton) {
        if let cell = sender.superview?.superview?.superview?.superview?.superview as? SelectTicketCell {
            if ((ticketList?[sender.tag].ticketCount) ?? 0) == 0 {
                cell.addButton.isHidden = false
                cell.ticketCountBaseView.isHidden = true
                return
            } else {
                ticketList?[sender.tag].ticketCount = ((ticketList?[sender.tag].ticketCount) ?? 0) + 1
                cell.ticketCountButton.setTitle("\((ticketList?[sender.tag].ticketCount) ?? 0)", for: .normal)
            }
        }
    }
}

//MARK: UItableview Delegates
extension SelectTicketVC: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
      
    }
}

//MARK: API Methods

extension SelectTicketVC {
    func getTicketList(){
        EventVM.shared.getTicketList(dict: setData()){ (message, error) in
            if error != nil{
                self.showErrorMessage(error: error)
            } else{
                self.ticketList = EventVM.shared.ticketListArray
                self.tableView.reloadData()
            }
        }
    }
}

